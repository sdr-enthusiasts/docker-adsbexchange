---

name: Check container software versions

on:
  workflow_dispatch:
  # Check for new versions in adsbx repos
  schedule:
    - cron: "0 12 * * *"

jobs:

  version_in_container:
    name: Check versions in 'latest' image
    runs-on: ubuntu-latest
    outputs:
      currver: ${{ steps.current-version.outputs.currver }}
    steps:
      - name: Get version from ghcr.io/sdr-enthusiasts/docker-adsbexchange:latest
        id: current-version
        run: |
          set -x
          docker run --rm --entrypoint cat ghcr.io/sdr-enthusiasts/docker-adsbexchange:latest /VERSIONS
          echo "::set-output name=currverhash::$(docker run --rm --entrypoint md5sum ghcr.io/sdr-enthusiasts/docker-adsbexchange:latest /VERSIONS)"

  latest_version:
    name: Check latest versions
    runs-on: ubuntu-latest
    outputs:
      latestverhash: ${{ steps.latest-version.outputs.latestverhash }}
    steps:
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: local-docker-adsbexchange:latest
      - name: Get version from newly built image
        id: latest-version
        run: |
          set -x
          docker run --rm --entrypoint cat local-docker-radarbox:latest /VERSIONS
          echo "::set-output name=latestverhash::$(docker run --rm --entrypoint cat local-docker-radarbox:latest /VERSIONS)"

  display_versions:
    name: Display versions
    needs: [version_in_container, latest_version]
    runs-on: ubuntu-latest
    steps:
      - name: Display versions
        run: |
          echo "version hash in current latest image = ${{ needs.version_in_container.outputs.currverhash }}"
          echo "version hash in image just built = ${{ needs.latest_version.outputs.latestverhash }}"
          echo "will a deployment be triggered = ${{ needs.version_in_container.outputs.currverhash != needs.latest_version.outputs.latestverhash }}"

  trigger_deploy:
    name: Trigger deployment of image
    needs: [version_in_container, latest_version]
    if: ${{ needs.version_in_container.outputs.currverhash != needs.latest_version.outputs.latestverhash }}
    runs-on: ubuntu-latest
    env:
      WORKFLOW_AUTH_TOKEN: ${{ secrets.GH_PAT_MIKENYE }}
      WORKFLOW_REPO: sdr-enthusiasts/docker-adsbexchange
      WORKFLOW_FILE: deploy.yml
      WORKFLOW_REASON: "triggered via check_versions.yml in sdr-enthusiasts/docker-adsbexchange"
    steps:
      - name: Trigger ${{ env.WORKFLOW_FILE }} in ${{ env.WORKFLOW_REPO }}
        run: |
          echo "$WORKFLOW_AUTH_TOKEN" | gh auth login --with-token
          gh workflow run --ref main --repo "$WORKFLOW_REPO" "$WORKFLOW_FILE" -f reason="$WORKFLOW_REASON"
